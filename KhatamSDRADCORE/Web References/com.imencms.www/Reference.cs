//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace KhatamSDRADCORE.com.imencms.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SMSServiceSoap", Namespace="ImenCMS_SMS_Service")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class SMSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendOneSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOneSMS1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOneSMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMS1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendArraySMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendArraySMS1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendArraySMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOneSMSAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendArraySMSAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReciveSMSDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReciveSMSDSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMSService() {
            this.Url = global::KhatamSDRADCORE.Properties.Settings.Default.KhatamSDRADCORE_com_imencms_www_SMSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendOneSMSCompletedEventHandler SendOneSMSCompleted;
        
        /// <remarks/>
        public event SendOneSMS1CompletedEventHandler SendOneSMS1Completed;
        
        /// <remarks/>
        public event SendOneSMS2CompletedEventHandler SendOneSMS2Completed;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMS1CompletedEventHandler SendSMS1Completed;
        
        /// <remarks/>
        public event SendSMS2CompletedEventHandler SendSMS2Completed;
        
        /// <remarks/>
        public event SendArraySMSCompletedEventHandler SendArraySMSCompleted;
        
        /// <remarks/>
        public event SendArraySMS1CompletedEventHandler SendArraySMS1Completed;
        
        /// <remarks/>
        public event SendArraySMS2CompletedEventHandler SendArraySMS2Completed;
        
        /// <remarks/>
        public event SendOneSMSAgentCompletedEventHandler SendOneSMSAgentCompleted;
        
        /// <remarks/>
        public event SendSMSAgentCompletedEventHandler SendSMSAgentCompleted;
        
        /// <remarks/>
        public event SendArraySMSAgentCompletedEventHandler SendArraySMSAgentCompleted;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event ReciveSMSDTCompletedEventHandler ReciveSMSDTCompleted;
        
        /// <remarks/>
        public event ReciveSMSDSCompletedEventHandler ReciveSMSDSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send One SMS", RequestElementName="Send One SMS", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send One SMSResponse", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send One SMSResult")]
        public int SendOneSMS(string MobileNo, string SMSText, string AcountID) {
            object[] results = this.Invoke("SendOneSMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendOneSMSAsync(string MobileNo, string SMSText, string AcountID) {
            this.SendOneSMSAsync(MobileNo, SMSText, AcountID, null);
        }
        
        /// <remarks/>
        public void SendOneSMSAsync(string MobileNo, string SMSText, string AcountID, object userState) {
            if ((this.SendOneSMSOperationCompleted == null)) {
                this.SendOneSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOneSMSOperationCompleted);
            }
            this.InvokeAsync("SendOneSMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID}, this.SendOneSMSOperationCompleted, userState);
        }
        
        private void OnSendOneSMSOperationCompleted(object arg) {
            if ((this.SendOneSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOneSMSCompleted(this, new SendOneSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendOneSMS1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send One SMS with Line No.", RequestElementName="Send One SMS with Line No.", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send One SMS with Line No.Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send One SMS with Line No.Result")]
        public int SendOneSMS(string MobileNo, string SMSText, string AcountID, string LineNo) {
            object[] results = this.Invoke("SendOneSMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendOneSMS1Async(string MobileNo, string SMSText, string AcountID, string LineNo) {
            this.SendOneSMS1Async(MobileNo, SMSText, AcountID, LineNo, null);
        }
        
        /// <remarks/>
        public void SendOneSMS1Async(string MobileNo, string SMSText, string AcountID, string LineNo, object userState) {
            if ((this.SendOneSMS1OperationCompleted == null)) {
                this.SendOneSMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOneSMS1OperationCompleted);
            }
            this.InvokeAsync("SendOneSMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo}, this.SendOneSMS1OperationCompleted, userState);
        }
        
        private void OnSendOneSMS1OperationCompleted(object arg) {
            if ((this.SendOneSMS1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOneSMS1Completed(this, new SendOneSMS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendOneSMS2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send One SMS with ReffererID and LineNo", RequestElementName="Send One SMS with ReffererID and LineNo", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send One SMS with ReffererID and LineNoResponse", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send One SMS with ReffererID and LineNoResult")]
        public int SendOneSMS(string MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            object[] results = this.Invoke("SendOneSMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendOneSMS2Async(string MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            this.SendOneSMS2Async(MobileNo, SMSText, AcountID, LineNo, RefererID, null);
        }
        
        /// <remarks/>
        public void SendOneSMS2Async(string MobileNo, string SMSText, string AcountID, string LineNo, int RefererID, object userState) {
            if ((this.SendOneSMS2OperationCompleted == null)) {
                this.SendOneSMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOneSMS2OperationCompleted);
            }
            this.InvokeAsync("SendOneSMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID}, this.SendOneSMS2OperationCompleted, userState);
        }
        
        private void OnSendOneSMS2OperationCompleted(object arg) {
            if ((this.SendOneSMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOneSMS2Completed(this, new SendOneSMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send Array SMS Number ", RequestElementName="Send Array SMS Number ", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send Array SMS Number Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send Array SMS Number Result")]
        public int SendSMS(string[] MobileNo, string SMSText, string AcountID) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string[] MobileNo, string SMSText, string AcountID) {
            this.SendSMSAsync(MobileNo, SMSText, AcountID, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string[] MobileNo, string SMSText, string AcountID, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendSMS1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send Array SMS Number with Line No. ", RequestElementName="Send Array SMS Number with Line No. ", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send Array SMS Number with Line No. Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send Array SMS Number with Line No. Result")]
        public int SendSMS(string[] MobileNo, string SMSText, string AcountID, string LineNo) {
            object[] results = this.Invoke("SendSMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMS1Async(string[] MobileNo, string SMSText, string AcountID, string LineNo) {
            this.SendSMS1Async(MobileNo, SMSText, AcountID, LineNo, null);
        }
        
        /// <remarks/>
        public void SendSMS1Async(string[] MobileNo, string SMSText, string AcountID, string LineNo, object userState) {
            if ((this.SendSMS1OperationCompleted == null)) {
                this.SendSMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMS1OperationCompleted);
            }
            this.InvokeAsync("SendSMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo}, this.SendSMS1OperationCompleted, userState);
        }
        
        private void OnSendSMS1OperationCompleted(object arg) {
            if ((this.SendSMS1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMS1Completed(this, new SendSMS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendSMS2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send Array SMS Number with Line No. and Refferer ID ", RequestElementName="Send Array SMS Number with Line No. and Refferer ID ", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send Array SMS Number with Line No. and Refferer ID Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send Array SMS Number with Line No. and Refferer ID Result")]
        public int SendSMS(string[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            object[] results = this.Invoke("SendSMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMS2Async(string[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            this.SendSMS2Async(MobileNo, SMSText, AcountID, LineNo, RefererID, null);
        }
        
        /// <remarks/>
        public void SendSMS2Async(string[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID, object userState) {
            if ((this.SendSMS2OperationCompleted == null)) {
                this.SendSMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMS2OperationCompleted);
            }
            this.InvokeAsync("SendSMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID}, this.SendSMS2OperationCompleted, userState);
        }
        
        private void OnSendSMS2OperationCompleted(object arg) {
            if ((this.SendSMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMS2Completed(this, new SendSMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send ArrayList SMS", RequestElementName="Send ArrayList SMS", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send ArrayList SMSResponse", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send ArrayList SMSResult")]
        public int SendArraySMS(object[] MobileNo, string SMSText, string AcountID) {
            object[] results = this.Invoke("SendArraySMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendArraySMSAsync(object[] MobileNo, string SMSText, string AcountID) {
            this.SendArraySMSAsync(MobileNo, SMSText, AcountID, null);
        }
        
        /// <remarks/>
        public void SendArraySMSAsync(object[] MobileNo, string SMSText, string AcountID, object userState) {
            if ((this.SendArraySMSOperationCompleted == null)) {
                this.SendArraySMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendArraySMSOperationCompleted);
            }
            this.InvokeAsync("SendArraySMS", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID}, this.SendArraySMSOperationCompleted, userState);
        }
        
        private void OnSendArraySMSOperationCompleted(object arg) {
            if ((this.SendArraySMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendArraySMSCompleted(this, new SendArraySMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendArraySMS1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send ArrayList SMS with Line No. ", RequestElementName="Send ArrayList SMS with Line No. ", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send ArrayList SMS with Line No. Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send ArrayList SMS with Line No. Result")]
        public int SendArraySMS(object[] MobileNo, string SMSText, string AcountID, string LineNo) {
            object[] results = this.Invoke("SendArraySMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendArraySMS1Async(object[] MobileNo, string SMSText, string AcountID, string LineNo) {
            this.SendArraySMS1Async(MobileNo, SMSText, AcountID, LineNo, null);
        }
        
        /// <remarks/>
        public void SendArraySMS1Async(object[] MobileNo, string SMSText, string AcountID, string LineNo, object userState) {
            if ((this.SendArraySMS1OperationCompleted == null)) {
                this.SendArraySMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendArraySMS1OperationCompleted);
            }
            this.InvokeAsync("SendArraySMS1", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo}, this.SendArraySMS1OperationCompleted, userState);
        }
        
        private void OnSendArraySMS1OperationCompleted(object arg) {
            if ((this.SendArraySMS1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendArraySMS1Completed(this, new SendArraySMS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="SendArraySMS2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Send ArrayList SMS with Line No. and Refferer ID ", RequestElementName="Send ArrayList SMS with Line No. and Refferer ID ", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Send ArrayList SMS with Line No. and Refferer ID Response", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Send ArrayList SMS with Line No. and Refferer ID Result")]
        public int SendArraySMS(object[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            object[] results = this.Invoke("SendArraySMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendArraySMS2Async(object[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID) {
            this.SendArraySMS2Async(MobileNo, SMSText, AcountID, LineNo, RefererID, null);
        }
        
        /// <remarks/>
        public void SendArraySMS2Async(object[] MobileNo, string SMSText, string AcountID, string LineNo, int RefererID, object userState) {
            if ((this.SendArraySMS2OperationCompleted == null)) {
                this.SendArraySMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendArraySMS2OperationCompleted);
            }
            this.InvokeAsync("SendArraySMS2", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        LineNo,
                        RefererID}, this.SendArraySMS2OperationCompleted, userState);
        }
        
        private void OnSendArraySMS2OperationCompleted(object arg) {
            if ((this.SendArraySMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendArraySMS2Completed(this, new SendArraySMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/SendOneSMSAgent", RequestNamespace="ImenCMS_SMS_Service", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendOneSMSAgent(string MobileNo, string SMSText, string AcountID, int RefererID) {
            object[] results = this.Invoke("SendOneSMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendOneSMSAgentAsync(string MobileNo, string SMSText, string AcountID, int RefererID) {
            this.SendOneSMSAgentAsync(MobileNo, SMSText, AcountID, RefererID, null);
        }
        
        /// <remarks/>
        public void SendOneSMSAgentAsync(string MobileNo, string SMSText, string AcountID, int RefererID, object userState) {
            if ((this.SendOneSMSAgentOperationCompleted == null)) {
                this.SendOneSMSAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOneSMSAgentOperationCompleted);
            }
            this.InvokeAsync("SendOneSMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID}, this.SendOneSMSAgentOperationCompleted, userState);
        }
        
        private void OnSendOneSMSAgentOperationCompleted(object arg) {
            if ((this.SendOneSMSAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOneSMSAgentCompleted(this, new SendOneSMSAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/SendSMSAgent", RequestNamespace="ImenCMS_SMS_Service", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMSAgent(string[] MobileNo, string SMSText, string AcountID, int RefererID) {
            object[] results = this.Invoke("SendSMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAgentAsync(string[] MobileNo, string SMSText, string AcountID, int RefererID) {
            this.SendSMSAgentAsync(MobileNo, SMSText, AcountID, RefererID, null);
        }
        
        /// <remarks/>
        public void SendSMSAgentAsync(string[] MobileNo, string SMSText, string AcountID, int RefererID, object userState) {
            if ((this.SendSMSAgentOperationCompleted == null)) {
                this.SendSMSAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSAgentOperationCompleted);
            }
            this.InvokeAsync("SendSMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID}, this.SendSMSAgentOperationCompleted, userState);
        }
        
        private void OnSendSMSAgentOperationCompleted(object arg) {
            if ((this.SendSMSAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSAgentCompleted(this, new SendSMSAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/SendArraySMSAgent", RequestNamespace="ImenCMS_SMS_Service", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendArraySMSAgent(object[] MobileNo, string SMSText, string AcountID, int RefererID) {
            object[] results = this.Invoke("SendArraySMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendArraySMSAgentAsync(object[] MobileNo, string SMSText, string AcountID, int RefererID) {
            this.SendArraySMSAgentAsync(MobileNo, SMSText, AcountID, RefererID, null);
        }
        
        /// <remarks/>
        public void SendArraySMSAgentAsync(object[] MobileNo, string SMSText, string AcountID, int RefererID, object userState) {
            if ((this.SendArraySMSAgentOperationCompleted == null)) {
                this.SendArraySMSAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendArraySMSAgentOperationCompleted);
            }
            this.InvokeAsync("SendArraySMSAgent", new object[] {
                        MobileNo,
                        SMSText,
                        AcountID,
                        RefererID}, this.SendArraySMSAgentOperationCompleted, userState);
        }
        
        private void OnSendArraySMSAgentOperationCompleted(object arg) {
            if ((this.SendArraySMSAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendArraySMSAgentCompleted(this, new SendArraySMSAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/GetCredit", RequestNamespace="ImenCMS_SMS_Service", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCredit(string AcountID) {
            object[] results = this.Invoke("GetCredit", new object[] {
                        AcountID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync(string AcountID) {
            this.GetCreditAsync(AcountID, null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(string AcountID, object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[] {
                        AcountID}, this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Recive SMS DataTable", RequestElementName="Recive SMS DataTable", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Recive SMS DataTableResponse", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Recive SMS DataTableResult")]
        public System.Data.DataTable ReciveSMSDT(int ReciveID, string AcountID) {
            object[] results = this.Invoke("ReciveSMSDT", new object[] {
                        ReciveID,
                        AcountID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReciveSMSDTAsync(int ReciveID, string AcountID) {
            this.ReciveSMSDTAsync(ReciveID, AcountID, null);
        }
        
        /// <remarks/>
        public void ReciveSMSDTAsync(int ReciveID, string AcountID, object userState) {
            if ((this.ReciveSMSDTOperationCompleted == null)) {
                this.ReciveSMSDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReciveSMSDTOperationCompleted);
            }
            this.InvokeAsync("ReciveSMSDT", new object[] {
                        ReciveID,
                        AcountID}, this.ReciveSMSDTOperationCompleted, userState);
        }
        
        private void OnReciveSMSDTOperationCompleted(object arg) {
            if ((this.ReciveSMSDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReciveSMSDTCompleted(this, new ReciveSMSDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ImenCMS_SMS_Service/Recive SMS DataSet", RequestElementName="Recive SMS DataSet", RequestNamespace="ImenCMS_SMS_Service", ResponseElementName="Recive SMS DataSetResponse", ResponseNamespace="ImenCMS_SMS_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Recive SMS DataSetResult")]
        public System.Data.DataSet ReciveSMSDS(int ReciveID, string AcountID) {
            object[] results = this.Invoke("ReciveSMSDS", new object[] {
                        ReciveID,
                        AcountID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReciveSMSDSAsync(int ReciveID, string AcountID) {
            this.ReciveSMSDSAsync(ReciveID, AcountID, null);
        }
        
        /// <remarks/>
        public void ReciveSMSDSAsync(int ReciveID, string AcountID, object userState) {
            if ((this.ReciveSMSDSOperationCompleted == null)) {
                this.ReciveSMSDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReciveSMSDSOperationCompleted);
            }
            this.InvokeAsync("ReciveSMSDS", new object[] {
                        ReciveID,
                        AcountID}, this.ReciveSMSDSOperationCompleted, userState);
        }
        
        private void OnReciveSMSDSOperationCompleted(object arg) {
            if ((this.ReciveSMSDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReciveSMSDSCompleted(this, new ReciveSMSDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendOneSMSCompletedEventHandler(object sender, SendOneSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOneSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOneSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendOneSMS1CompletedEventHandler(object sender, SendOneSMS1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOneSMS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOneSMS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendOneSMS2CompletedEventHandler(object sender, SendOneSMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOneSMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOneSMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMS1CompletedEventHandler(object sender, SendSMS1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMS2CompletedEventHandler(object sender, SendSMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendArraySMSCompletedEventHandler(object sender, SendArraySMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendArraySMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendArraySMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendArraySMS1CompletedEventHandler(object sender, SendArraySMS1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendArraySMS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendArraySMS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendArraySMS2CompletedEventHandler(object sender, SendArraySMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendArraySMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendArraySMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendOneSMSAgentCompletedEventHandler(object sender, SendOneSMSAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOneSMSAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOneSMSAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMSAgentCompletedEventHandler(object sender, SendSMSAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendArraySMSAgentCompletedEventHandler(object sender, SendArraySMSAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendArraySMSAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendArraySMSAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReciveSMSDTCompletedEventHandler(object sender, ReciveSMSDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReciveSMSDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReciveSMSDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReciveSMSDSCompletedEventHandler(object sender, ReciveSMSDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReciveSMSDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReciveSMSDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591